############################################### Setup #######################################################
version: '3.8'

volumes:
  RedisDB: {}
  Nginx: {}
  ElasticData: {}
  ElasticConfig: {}
  Kibana: {}
  RabbitmqLog: {}
  RabbitmqLib: {}
  database-data: {}

networks:
  dio:
    driver: bridge
  dio-test:

services:
  ################################################ Hercules #######################################################
  hercules:
    build:
      context: ./hercules
      dockerfile: Dockerfile
    container_name: hercules
    expose:
      - 4000
    networks:
      dio:
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Backend'

  # hercules_db:
  #   image: postgres:14-alpine
  #   container_name: PsqlDb
  #   expose:
  #     - 5432:5432

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    volumes:
      - RedisDB:/data
    networks:
      dio:
    labels:
      org.label-schema.group: 'Api'

  ################################################ Apollo #######################################################
  apollo:
    build:
      context: ./apollo
      dockerfile: Dockerfile
      target: development
    command: pnpm run start:dev
    container_name: apollo
#    expose:
#      - 4001
    ports:
      - '4001:4001'
    networks:
      - dio-test
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Apollo'
    volumes:
      - ./apollo:/usr/share/app
      - /usr/share/app/node_modules
    depends_on:
      - apollo-db

  apollo-db:
    image: postgres:14-alpine
    container_name: apollo-db
    ports:
      - 5434:5432
    networks:
      - dio-test
    environment:
      POSTGRES_USER: ares
      POSTGRES_PASSWORD: 7142
      POSTGRES_DB: apollo

  #  scraper:
  #    build:
  #      context: ./scrapper
  #      dockerfile: Dockerfile
  #    container_name: scraper
  #    expose:
  #      - 4001
  #    networks:
  #      dio:
  #    restart: unless-stopped
  #    labels:
  #      org.label-schema.group: "Scraper"

  ################################################ Coeus #######################################################
  coeus:
    build:
      context: ./coeus
      dockerfile: Dockerfile
    container_name: coeus
    expose:
      - 4002
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Coeus'

  ############################################## Athena ########################################################
  athena:
    build:
      context: ./athena
      dockerfile: Dockerfile
    container_name: athena
    expose:
      - 4003
    networks:
      dio:
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Athena'

  ############################################## Elastic ########################################################
  #  elasticsearch_zues:
  #    build:
  #      context: ./server/elk/elasticsearch
  #      dockerfile: Dockerfile
  #      args:
  #        ELK_VERSION: ${ELK_VERSION}
  #    container_name: elasticsearch_zues
  #    restart: unless-stopped
  #    environment:
  #      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
  #      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  #      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME}
  #      ELASTIC_NODE_NAME: ${ELASTIC_NODE_NAME}
  #      ELASTIC_INIT_MASTER_NODE: ${ELASTIC_INIT_MASTER_NODE}
  #      ELASTIC_DISCOVERY_SEEDS: ${ELASTIC_DISCOVERY_SEEDS}
  #      ES_JAVA_OPTS: "-Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP} -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true"
  #      bootstrap.memory_lock: "true"
  #    volumes:
  #      - ElasticData:/usr/share/elasticsearch/data
  #      - ElasticConfig:/usr/share/elasticsearch/config
  #    ports:
  #      - "9200:9200"
  #      - "9300:9300"
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #      nofile:
  #        soft: 200000
  #        hard: 200000
  #    networks:
  #      - dio
  # healthcheck:
  #   test: ["CMD", "sh", "-c", "curl -sf --insecure https://$ELASTIC_USERNAME:$ELASTIC_PASSWORD@localhost:9200/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'"]

  ################################################# System ########################################################
  ### v1.23.0-alpine
  nginx:
    build:
      context: ./server/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - '3000:3000'
      - '3100:3100'
      - '4000:4000'
      - '5601:5601'
      - '8081:8081'

    volumes:
      - Nginx:/etc/nginx
    networks:
      - dio
    restart: unless-stopped
    labels:
      org.label-schema.group: 'System'
#  rabbitmq:
#    image: rabbitmq:3.9.22-management-alpine
#    container_name: "rabbitmq"
#    ports:
#      - 5673:5672
#      - 15673:15672
#    volumes:
#      - RabbitmqLib:/var/lib/rabbitmq/
#      - RabbitmqLog:/var/log/rabbitmq
#    networks:
#      - dio
################################################################################################################
