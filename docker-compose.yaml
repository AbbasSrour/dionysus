############################################### Setup #######################################################
version: "3.3"

volumes:
  RedisDB:
  Prometheus: {}
  PrometheusData: {}
  GrafanaData: {}
  GrafanaConfig: {}
  Caddy: {}
  AlertManager: {}
  Syslog: {}
  Loki: {}
  Promtail: {}

networks:
  redis:
  loki: {}
  monitor-net:
    driver: bridge

services:
################################################ Api #######################################################
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "5000:5000"
      - "9229:9229"
    networks:
      redis:
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6479:6379"
    volumes:
      - RedisDB:/data
    networks:
      - redis

############################################ Prometheus #######################################################
  prometheus:
    container_name: prometheus
    labels:
      org.label-schema.group: "monitoring"
    build: 
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    expose:
      - 9090
    networks:
      - monitor-net
    volumes:
      - Prometheus:/etc/prometheus
      - PrometheusData:/prometheus
      # - /etc/localtime:/etc/localtime:ro
      # - /etc/timezone:/etc/timezone:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  alertmanager:
    build: 
      context: ./monitoring/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    volumes:
      - AlertManager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
      # - /etc/localtime:/etc/localtime:ro
      # - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

################################################## Loki ######################################################
  loki:
    build:
      context: ./monitoring/loki
      dockerfile: Dockerfile
    container_name: loki
    volumes:
      - Loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yml
    restart: always
    expose:
      - 3100
    networks:
      monitor-net:
    labels:
      org.label-schema.group: "logging"

  promtail:
    build:
      context: ./monitoring/promtail
      dockerfile: Dockerfile
    command: -config.file=/etc/promtail/promtail-config.yml
    container_name: promtail
    volumes:
      - Promtail:/etc/promtail
      - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers
    expose:
      - 1514
      - 9080
    networks:
      monitor-net:
    restart: always
    labels:
      org.label-schema.group: "logging"
  
  syslog-ng:
    build: 
      context: ./monitoring/syslog
      dockerfile: Dockerfile
    container_name: syslog-ng
    command: -edv
    volumes:
    - Syslog:/etc/syslog-ng
    networks:
      monitor-net:
    ports:
      - protocol: udp
        published: 514
        target: 514
      - protocol: tcp
        published: 601
        target: 601
    restart: always
    labels:
      org.label-schema.group: "logging"

############################################## Visualization ###################################################
  grafana:
    build: 
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - GrafanaData:/var/lib/grafana
      - GrafanaConfig:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

################################################# Network ########################################################
  caddy:
    image: caddy:2.3.0
    build:
      context: ./ssl/caddy
      dockerfile: Dockerfile
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - Caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

################################################################################################################