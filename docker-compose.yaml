############################################### Setup #######################################################
version: "3.8"

volumes:
  RedisDB:
  GrafanaData: {}
  GrafanaConfig: {}
  Nginx: {}
  ElasticData: {}
  ElasticConfig: {}
  Kibana: {}

networks:
  dio:
    driver: bridge

services:
  ################################################ Api #######################################################
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - 4000
      - 9229
    networks:
      dio:
    restart: unless-stopped
    labels:
      org.label-schema.group: "Backend"

  scraper:
    build:
      context: ./scrapper
      dockerfile: Dockerfile
    container_name: scraper
    expose:
      - 4001
    networks:
      dio:
    restart: unless-stopped
    labels:
      org.label-schema.group: "Scraper"

  engine:
    build:
      context: ./engine
      dockerfile: Dockerfile
    container_name: engine
    networks:
      dio:
    restart: unless-stopped
    labels:
      org.label-schema.group: "Engine"

  ############################################## Databases ########################################################
  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    volumes:
      - RedisDB:/data
    networks:
      dio:
    labels:
      org.label-schema.group: "Api"

  elasticsearch_zues:
     build:
       context: ./server/elk/elasticsearch
       dockerfile: Dockerfile
       args:
         ELK_VERSION: ${ELK_VERSION}
     container_name: elasticsearch_zues
     restart: unless-stopped
     environment:
       ELASTIC_USERNAME: ${ELASTIC_USERNAME}
       ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
       ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME}
       ELASTIC_NODE_NAME: ${ELASTIC_NODE_NAME}
       ELASTIC_INIT_MASTER_NODE: ${ELASTIC_INIT_MASTER_NODE}
       ELASTIC_DISCOVERY_SEEDS: ${ELASTIC_DISCOVERY_SEEDS}
       ES_JAVA_OPTS: "-Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP} -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true"
       bootstrap.memory_lock: "true"
     volumes:
       - ElasticData:/usr/share/elasticsearch/data
       - ElasticConfig:/usr/share/elasticsearch/config
     ports:
       - "9200:9200"
       - "9300:9300"
     ulimits:
       memlock:
         soft: -1
         hard: -1
       nofile:
         soft: 200000
         hard: 200000
     networks:
       - dio
     # healthcheck:
     #   test: ["CMD", "sh", "-c", "curl -sf --insecure https://$ELASTIC_USERNAME:$ELASTIC_PASSWORD@localhost:9200/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'"]

  ############################################## Visualization ###################################################
  ### v9.0.2
  grafana:
    build:
      context: ./server/monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - GrafanaData:/var/lib/grafana
      - GrafanaConfig:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - dio
    labels:
      org.label-schema.group: "Visualization"


  kibana:
    build:
      context: ./server/elk/kibana
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: kibana
    restart: unless-stopped
    volumes:
      - Kibana:/usr/share/kibana
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    expose:
      - 5601
    networks:
      - dio

  ################################################# System ########################################################
  ### v1.23.0-alpine
  nginx:
    build:
      context: ./server/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "3000:3000"
      - "3100:3100"
      - "4000:4000"
      -  "5601:5601"
      - "8081:8081"

    volumes:
      - Nginx:/etc/nginx
    networks:
      - dio
    restart: unless-stopped
    labels:
      org.label-schema.group: "System"
################################################################################################################
