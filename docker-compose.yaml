############################################### Setup #######################################################
version: "3.3"

volumes:
  RedisDB:
  Prometheus: {}
  PrometheusData: {}
  GrafanaData: {}
  GrafanaConfig: {}
  Caddy: {}
  AlertManager: {}
  Syslog: {}
  Loki: {}
  LokiData: {}
  Promtail: {}
  ConsulConfig: {}
  ConsulData: {}
  Vault: {}
  Nginx: {}

networks:
  test:
  monitor-net:
    driver: bridge

services:
################################################ Api #######################################################
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    expose:
      - 5000
      - 9229
    networks:
      monitor-net:
    restart: unless-stopped
    labels:
      org.label-schema.group: "Api"

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    volumes:
      - RedisDB:/data
    networks:
      monitor-net:
    labels:
      org.label-schema.group: "Api"

############################################ Monitoring #######################################################
### v2.36.2
  prometheus:
    build: 
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    expose:
      - 9090
    networks:
      - monitor-net
    volumes:
      - Prometheus:/etc/prometheus
      - PrometheusData:/prometheus
      # - /etc/localtime:/etc/localtime:ro
      # - /etc/timezone:/etc/timezone:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

### v0.24.0
  alertmanager:
    build: 
      context: ./monitoring/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    volumes:
      - AlertManager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

### v0.44.0
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
      # - /etc/localtime:/etc/localtime:ro
      # - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

### v1.4.3
  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

### v1.3.1
  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

### 0.10
  nginxexporter:
    image: nginx/nginx-prometheus-exporter:0.10
    container_name: nginx-exporter
    expose:
      - 9113
    command: 
      - -nginx.scrape-uri
      - http://nginx:8081/stub_status ### Docker 0 ip address, cmd: $ ip addr show docker0
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

################################################## Logging ######################################################
### v2.5.0
  loki:
    build:
      context: ./monitoring/loki
      dockerfile: Dockerfile
    container_name: loki
    privileged: true
    user: root
    volumes:
      - Loki:/etc/loki
      - LokiData:/tmp/loki
    command: -config.file=/etc/loki/loki-config.yml
    restart: always
    expose:
      - 3100
    networks:
      monitor-net:
    labels:
      org.label-schema.group: "logging"

### v2.5.0
  promtail:
    build:
      context: ./monitoring/promtail
      dockerfile: Dockerfile
    user: root
    privileged: true
    container_name: promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - Promtail:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    expose:
      - 9080
    ports:
      - protocol: tcp
        published: 1514
        target: 1514 
    networks:
      monitor-net:
    restart: unless-stopped
    labels:
      org.label-schema.group: "logging"
  
## latest
  # syslog-ng:
  #   build: 
  #     context: ./monitoring/syslog
  #     dockerfile: Dockerfile
  #   container_name: syslog-ng
  #   user: root
  #   privileged: true
  #   command: -edv
  #   volumes:
  #   - Syslog:/etc/syslog-ng
  #   networks:
  #     monitor-net:
  #   ports:
  #     - protocol: udp
  #       published: 514
  #       target: 514
  #     - protocol: tcp
  #       published: 601
  #       target: 601
  #   restart: always
  #   labels:
  #     org.label-schema.group: "logging"

############################################## Visualization ###################################################
### v9.0.2
  grafana:
    build: 
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - GrafanaData:/var/lib/grafana
      - GrafanaConfig:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "Visualization"

################################################# System ########################################################
### v2.3.0
  # caddy:
  #   build:
  #     context: ./system/caddy
  #     dockerfile: Dockerfile
  #   container_name: caddy
  #   ports:
  #     - "3000:3000"   ## Grafana
  #     - "3100:3100"   ## Loki
  #     - "5000:5000"   ## Api
  #     - "9090:9090"
  #     - "9093:9093"
  #     - "9091:9091"
  #   volumes:
  #     - Caddy:/etc/caddy
  #   environment:
  #     - ADMIN_USER=${ADMIN_USER:-admin}
  #     - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
  #     - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
  #   restart: unless-stopped
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "System"

### v1.5.0
  vault:
    build: 
      context: ./system/secrets/vault
      dockerfile: Dockerfile
    container_name: vault
    ports:
      - 8200:8200
    volumes:
      - Vault:/vault
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    command: server
    cap_add:
      - IPC_LOCK
    depends_on:
      - consul
    networks:
      - test

### v1.8.2
  consul:
    build: 
      context: ./system/secrets/consul
      dockerfile: Dockerfile
    container_name: consul
    ports:
      - 8500:8500
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
      - CONSUL_ALLOW_PRIVILEGED_PORTS=
    command: agent -server -bootstrap-expect 1
    volumes:
      - ConsulConfig:/consul/config
      - ConsulData:/consul/data
    networks:
      - test

### v1.23.0-alpine
  nginx:
    build: 
      context: ./system/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "5000:80"
      - "3000:3000"
      - "3100:3100"
      - "8081:8081"

    volumes:
      - Nginx:/etc/nginx
    networks:
      - monitor-net
    restart: unless-stopped
################################################################################################################