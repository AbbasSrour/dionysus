user root;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}

http {

  sendfile on;
  large_client_header_buffers 4 32k;
        
  upstream web-api {
    server api:5000;
  }    
 server {
        listen 80;
        server_name Abbas;

        location / {
            return 301 https://$host$request_uri;
        }
    }

  server {
   listen 443 ssl;
   server_name Abbas;

    ssl_certificate /etc/nginx/dionysus.crt;
    ssl_certificate_key /etc/nginx/dionysus.key;

   location / {
    proxy_pass         http://api:5000;
    proxy_redirect     off;
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection keep-alive;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_buffer_size           128k;
    proxy_buffers               4 256k;
    proxy_busy_buffers_size     256k;
   }
  }

  # server {
  #   listen 3000;
  #   server_name grafana;
  #   # ssl_certificate /etc/nginx/nginx-certificate.crt;
  #   # ssl_certificate_key /etc/nginx/nginx.key;

  #   location / {
  #     proxy_pass          http://grafana:3000;
  #     proxy_set_header    Host $http_host;
  #   }
  # }

  # server {
  #   listen 3100;
  #   server_name loki;

  #   location / {
  #     proxy_pass          http://loki:3100;
  #     proxy_set_header    X-Forwarded-For $remote_addr;
  #   }
  # }

  # server {
  #   listen 5601;
  #   server_name kibana;
  #   # ssl_certificate /etc/nginx/nginx-certificate.crt;
  #   # ssl_certificate_key /etc/nginx/nginx.key;

  #   location / {
  #     proxy_pass          http://kibana:5601;
  #     proxy_set_header    X-Forwarded-For $remote_addr;
  #   }
  # }

  # server {
  #   listen 8081;
  #   server_name nginx;

  #   location = /stub_status {
  #       stub_status;
  #   }
  # }
}